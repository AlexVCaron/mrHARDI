name: Release build

on:
  release:
    types: [created]

jobs:
  mrhardi-bakery:
    runs-on: ubuntu-latest
    environment: CI

    steps:
      -
        name: Maximize disk usage
        uses: easimon/maximize-build-space@v7
        with:
          root-reserve-mb: 30720
          temp-reserve-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-docker-images: 'true'
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Configure docker tags for the release
        id: release_tags
        uses: docker/metadata-action@v4
        with:
          images: |
            docker.io/avcaron/mrhardi
          tags: |
            type=semver,pattern={{raw}}
            type=ref,event=branch
          bake-target: release-tagging
      - 
        uses: actions/upload-artifact@v3
        with:
          name: tag-baking-recipe
          path: ${{ steps.release_tags.outputs.bake-file }}
      -
        name: Rebuild complete docker image stack with dependencies
        uses: docker/bake-action@v2.3.0
        with:
          workdir: ./containers
          files: |
            ./docker-bake.hcl
            ${{ steps.release_tags.outputs.bake-file }}
          pull: true
          push: true
          set: |
            mrhardi.output=type=registry
            mrhardi_cloner.args.mrhardi_ver=${{ github.event.release.tag_name }}
  
  mrhardi-packaging:
    needs: mrhardi-bakery
    runs-on: ubuntu-latest
    environment: CI

    steps:
      -
        name: Maximize disk usage
        uses: easimon/maximize-build-space@v7
        with:
          root-reserve-mb: 2048
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-docker-images: 'true'
      - 
        name: Setup singularity
        uses: eWaterCycle/setup-singularity@v7
        with:
          singularity-version: 3.7.1
      - 
        name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          login-server: mrhardi.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_TOKEN }}
      -
        name: Build and push singularity
        run: |
          mkdir -p mrhardi/singularity
          mkdir sif_tmp sif_cache
          export SINGULARITY_TMPDIR="$(pwd)/sif_tmp"
          export SINGULARITY_CACHEDIR="$(pwd)/sif_cache"
          echo "Caching and temping singularity at : $SINGULARITY_CACHEDIR and $SINGULARITY_TMPDIR"
          singularity build --disable-cache mrhardi.sif docker://avcaron/mrhardi:latest
          echo "${{ secrets.ACR_TOKEN }}" | singularity remote login --username ${{ secrets.ACR_USERNAME }} --password-stdin oras://mrhardi.azurecr.io
          singularity push mrhardi.sif oras://mrhardi.azurecr.io/mrHARDI/mrhardi:latest
          singularity push mrhardi.sif oras://mrhardi.azurecr.io/mrHARDI/mrhardi:${{ github.event.release.tag_name }}
