---

- name: Check for presence of custom Python
  command: python{{ pysrc_ver_major }} --version
  register: py_absent
  failed_when: py_absent.stdout == pydest_ver and not pydest_overwrite
  ignore_errors: yes

- name: Download Python tar
  get_url: url="{{ pysrc_url }}" dest="{{ pysrc_pkg }}"
  when: py_absent is succeeded

- name: Untar Python package
  unarchive:
    src: "{{ pysrc_pkg }}"
    dest: "{{ tmp_dir }}"
    copy: no
    creates: "{{ pysrc_dir }}"
  become: yes
  when: py_absent is succeeded

- name: Configure Python
  command:
    argv:
      - "./configure"
      - "--enable-optimizations"
      - "--prefix={{ pydest_dir }}"
      - "--exec-prefix={{ pydest_dir }}"
      - "--with-ensurepip=install"
      - "--enable-shared"
      - "--with-system-ffi"
    chdir: "{{ pysrc_dir }}"
  become: yes
  when: py_absent is succeeded

- name: Make Python
  command: make -j "{{ n_procs }}"
  args:
    chdir: "{{ pysrc_dir }}"
  when: py_absent is succeeded

- name: Make Python install
  command: make altinstall -j "{{ n_procs }}"
  args:
    chdir: "{{ pysrc_dir }}"
  when: py_absent is succeeded
  register: py_bin_installed

- name: Give rights to Python to vagrant vm user
  file:
    path: "{{ pydest_dir }}"
    state: directory
    recurse: yes
    owner: 'vagrant'
  become: yes
  when: py_bin_installed is not skipped and py_absent is succeeded

- name: Add Python alternative
  command:
    argv:
      - "update-alternatives"
      - "--install"
      - "/usr/local/bin/python{{ pysrc_ver_major }}"
      - "python{{ pysrc_ver_major }}"
      - "{{ pydest_dir }}/bin/python{{ pysrc_ver_s }}m"
      - "1"
  become: yes
  when: py_bin_installed is not skipped and py_absent is succeeded

- name: Add Pip alternative
  command:
    argv:
      - "update-alternatives"
      - "--install"
      - "/usr/local/bin/pip{{ pysrc_ver_major }}"
      - "pip{{ pysrc_ver_major }}"
      - "{{ pydest_dir }}/bin/pip{{ pysrc_ver_s }}"
      - "1"
  become: yes
  when: py_bin_installed is not skipped and py_absent is succeeded

- name: Set Python as main alternative
  command:
    argv:
      - "update-alternatives"
      - "--set"
      - "python{{ pysrc_ver_major }}"
      - "{{ pydest_dir }}/bin/python{{ pysrc_ver_s }}m"
      - "--force"
  when: py_bin_installed is not skipped and py_absent is succeeded

- name: Create Python non minimal symbolic link
  file:
    src: "{{ pydest_dir }}/bin/python{{ pysrc_ver_s }}m"
    dest: "{{ pydest_dir }}/bin/python{{ pysrc_ver_s }}"
    state: link
    owner: vagrant
  become: yes
  when: py_bin_installed is not skipped and py_absent is succeeded

- name: Set Pip as main alternative
  command:
    argv:
      - "update-alternatives"
      - "--set"
      - "pip{{ pysrc_ver_major }}"
      - "{{ pydest_dir }}/bin/pip{{ pysrc_ver_s }}"
      - "--force"
  when: py_bin_installed is not skipped and py_absent is succeeded

- name: Check if python profile.d file has been created already
  shell: test -f /etc/profile.d/mrh_python3.sh && echo 1 || echo 0
  register: python_lenv

- name: Add python3 and pip3 switch to login shells
  blockinfile:
    create: true
    path: /etc/profile.d/mrh_python3.sh
    mode: a+r
    block: |
      # Python 3 and Pip system wide overrides for mrHARDI
      update-alternatives --set python{{ pysrc_ver_major }} {{ pydest_dir }}/bin/python{{ pysrc_ver_s }}m --force
      update-alternatives --set pip{{ pysrc_ver_major }} {{ pydest_dir }}/bin/pip{{ pysrc_ver_s }} --force
      export PATH="$PATH:{{ pydest_dir }}/bin"
  become: yes
  when: python_lenv.stdout == "0"

- name: Check if python and pip switches are in bashrc
  shell: grep -c "update-alternatives --set python{{ pysrc_ver_major }} {{ pydest_dir }}/bin/python{{ pysrc_ver_s }}m --force" /etc/bash.bashrc || true
  register: python_nlenv

- name: Add python3 and pip3 switch and scripts to non-login shells
  blockinfile:
    path: /etc/bash.bashrc
    block: |

      # Python 3 and Pip system wide overrides for mrHARDI
      update-alternatives --set python{{ pysrc_ver_major }} {{ pydest_dir }}/bin/python{{ pysrc_ver_s }}m --force
      update-alternatives --set pip{{ pysrc_ver_major }} {{ pydest_dir }}/bin/pip{{ pysrc_ver_s }} --force
      export PATH="$PATH:{{ pydest_dir }}/bin"
  become: yes
  when: python_nlenv.stdout == "0"

- name: Clean up sources
  command: rm "{{ item }}"
  with_items:
    - "-r {{ pysrc_pkg }}"
    - "-rf {{ pysrc_dir }}"
  when: pysrc_cleanup and py_absent is succeeded
